version: "3.8"

services:
  products:
    image: pavelboldienkov/product-service:1.0
    container_name: products-ms
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SPRING_APPLICATION_NAME: ProductsMicroservice
      SERVER_PORT: 8081
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-1:9192,kafka-2:9192,kafka-3:9192
      SPRING_KAFKA_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER: org.springframework.kafka.support.serializer.JsonSerializer
      SPRING_KAFKA_CONSUMER_GROUP_ID: products-ms
      SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER: org.springframework.kafka.support.serializer.JsonDeserializer
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES: "*"
    ports:
      - 8081:8080
    extends:
      file: common-config.yml
      service: network-deploy-service

  payments:
    image: pavelboldienkov/payments-service:1.0
    container_name: payments-ms
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SPRING_APPLICATION_NAME: PaymentsMicroservice
      SERVER_PORT: 8082
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka-1:9192,kafka-2:9192,kafka-3:9192"
      SPRING_KAFKA_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER: org.springframework.kafka.support.serializer.JsonSerializer
      SPRING_KAFKA_CONSUMER_GROUP_ID: payments-ms
      SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER: org.springframework.kafka.support.serializer.JsonDeserializer
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES: "*"
      REMOTE_CCP_URL: "http://ccp:8084"  # замените, если нужно, адресом вашего сервиса CCP
    ports:
      - "8082:8082"
    extends:
      file: common-config.yml
      service: network-deploy-service

  orders:
    image: pavelboldienkov/orders-service:1.0
    container_name: orders-ms
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SPRING_APPLICATION_NAME: OrdersMicroservice
      SERVER_PORT: 8080
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka-1:9192,kafka-2:9192,kafka-3:9192"
      SPRING_KAFKA_PRODUCER_KEY_SERIALIZER: "org.apache.kafka.common.serialization.StringSerializer"
      SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER: "org.springframework.kafka.support.serializer.JsonSerializer"
      SPRING_KAFKA_CONSUMER_GROUP_ID: "orders-ms"
      SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: "org.apache.kafka.common.serialization.StringDeserializer"
      SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER: "org.springframework.kafka.support.serializer.JsonDeserializer"
      SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES: "*"
      #DB connectivity
      SPRING_DATASOURCE_URL: "jdbc:h2:mem:testdb"
      SPRING_DATASOURCE_USERNAME: "admin"
      SPRING_DATASOURCE_PASSWORD: "nimda"
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: "org.h2.Driver"
      SPRING_JPA_DATABASE_PLATFORM: "org.hibernate.dialect.H2Dialect"
      SPRING_H2_CONSOLE_ENABLED: "true"
      EVENTS_TOPIC_ORDERS: "orders-events"
      EVENTS_TOPIC_PRODUCTS: "products-events"
      EVENTS_TOPIC_PAYMENTS: "payments-events"
      COMMANDS_TOPIC_PRODUCTS: "products-commands"
      COMMANDS_TOPIC_PAYMENTS: "payments-commands"
      COMMANDS_TOPIC_ORDERS: "orders-commands"
    ports:
      - "8080:8080"
    extends:
      file: common-config.yml
      service: network-deploy-service

  cc-service:
    image: pavelboldienkov/credit-card-processor-service:1.0
    container_name: credit-card-processor-service
    ports:
      - "8084:8084"
    environment:
      SPRING_APPLICATION_NAME: CcProcessMicroservice
      SERVER_PORT: "8084"
      SPRING_JACKSON_DESERIALIZATION_FAIL_ON_UNKNOWN_PROPERTIES: "true"

  kafka-1:
    image: 'bitnami/kafka:3.3.2'
    container_name: kafka-1
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_KRAFT_CLUSTER_ID=r4zt_wrqTRuT7W2NJsB_GA
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9192,CONTROLLER://:9094,EXTERNAL://:9091
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9192,EXTERNAL://localhost:9091
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9094,2@kafka-2:9094,3@kafka-3:9094
    ports:
      - 9091:9091
    volumes:
      - ../kafka-volumes/server-1:/bitnami/kafka
    extends:
      file: common-config.yml
      service: network-deploy-service

  kafka-2:
    image: 'bitnami/kafka:3.3.2'
    container_name: kafka-2
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_KRAFT_CLUSTER_ID=r4zt_wrqTRuT7W2NJsB_GA
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9192,CONTROLLER://:9094,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9192,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9094,2@kafka-2:9094,3@kafka-3:9094
    ports:
      - 9092:9092
    volumes:
      - ../kafka-volumes/server-2:/bitnami/kafka
    extends:
      file: common-config.yml
      service: network-deploy-service

  kafka-3:
    image: 'bitnami/kafka:3.3.2'
    container_name: kafka-3
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_KRAFT_CLUSTER_ID=r4zt_wrqTRuT7W2NJsB_GA
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9192,CONTROLLER://:9094,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:9192,EXTERNAL://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9094,2@kafka-2:9094,3@kafka-3:9094
    ports:
      - 9093:9093
    volumes:
      - ../kafka-volumes/server-3:/bitnami/kafka
    extends:
      file: common-config.yml
      service: network-deploy-service

networks:
  sagaNetwork:
    driver: "bridge"
